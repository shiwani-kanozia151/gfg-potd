Stickler Thief

https://www.geeksforgeeks.org/problems/stickler-theif-1587115621/1

Stickler the thief wants to loot money from the houses arranged in a line. He cannot loot two consecutive houses and aims to maximize his total loot.
Given an array, arr[] where arr[i] represents the amount of money in the i-th house.
Determine the maximum amount he can loot.

Examples:

Input: arr[] = [6, 5, 5, 7, 4]
Output: 15
Explanation: Maximum amount he can get by looting 1st, 3rd and 5th house. Which is 6 + 5 + 4 = 15.

Input: arr[] = [1, 5, 3]
Output: 5
Explanation: Loot only 2nd house and get maximum amount of 5.

Input: arr[] = [4, 4, 4, 4]
Output: 8
Explanation: The optimal choice is to loot every alternate house. Looting the 1st and 3rd houses, or the 2nd and 4th, both give a maximum total of 4 + 4 = 8.

Constraints:
1 ≤ arr.size() ≤ 10^5
1 ≤ arr[i] ≤ 10^4

APPROACH:
basically this problem is also based on the approach of take and not take here like we select particular index then we need to select the next after it only and we have
choice whether to take that or not if we are taking then we need to visit one index after the took index. 

CODE:
class Solution {
  public:
    
    int t[100001];
    int solve(vector<int>&arr, int idx)
    {
        if(idx>=arr.size()) return 0;
        
        if(t[idx] != -1) return t[idx];
        
        int take=arr[idx]+solve(arr, idx+2);
        
        int not_take=solve(arr, idx+1);
        
        return t[idx] = max(take, not_take);
    }
    int findMaxSum(vector<int>& arr) {
        // code here
        memset(t, -1, sizeof(t));
        return solve(arr, 0);
    }
};
