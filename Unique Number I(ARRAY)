Unique Number I

Given a unsorted array arr[] of positive integers having all the numbers occurring exactly twice, except for one number which will occur only once. 
Find the number occurring only once.

Examples :

Input: arr[] = [1, 2, 1, 5, 5]
Output: 2
Explanation: Since 2 occurs once, while other numbers occur twice, 2 is the answer.

Input: arr[] = [2, 30, 2, 15, 20, 30, 15]
Output: 20
Explanation: Since 20 occurs once, while other numbers occur twice, 20 is the answer.

Constraints

1 ≤  arr.size()  ≤ 10^6
0 ≤ arr[i] ≤ 10^9

APPRAOCH1: USING NESTED LOOPS:
This problem can be solved using like we will keep on checking for evry element of array by traversing in the array whetehr it is present or not if preesnt then no need
to search further just come out of the inner loop and if not present then that will be the element that is occuring one time.

APPROACH2: USING XOR OPERATOR:
XOR operator have a property that it can make the output as zero if 2 inputs are same like for 0 0 -->0  and for 1 1 -->0 and for differnt input like for 0 1 -->1 and for 1 0 --->1
so the same appraoch we have followed here in starting we keep a variable as xoor=0 and keep on doing xor operation with every element of the array and at last get the 
one which is unique.

CODE:
class Solution {
  public:
    int findUnique(vector<int> &arr) {
        // code here
        int n=arr.size();
        int xoor=0;
        for(int i=0; i<n; i++)
        {
            xoor = xoor^arr[i];
        }
        
        return xoor;
    }
};
