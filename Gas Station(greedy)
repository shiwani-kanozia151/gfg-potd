Gas Station

https://www.geeksforgeeks.org/problems/circular-tour-1587115620/1

There are some gas stations along a circular route. You are given two integer arrays gas[] denoted as the amount of gas present at each station and
cost[] denoted as the cost of travelling to the next station. You have a car with an unlimited gas tank. You begin the journey with an empty tank from 
one of the gas stations. Return the index of the starting gas station if it's possible to travel around the circuit without running out of gas at any
station in a clockwise direction. If there is no such starting station exists, return -1.
Note: If a solution exists, it is guaranteed to be unique.

Examples:

Input: gas[] = [4, 5, 7, 4], cost[]= [6, 6, 3, 5]
Output: 2
Explanation: It is possible to travel around the circuit from station at index 2. Amount of gas at station 2 is (0 + 7) = 7.
Travel to station 3. Available gas = (7 – 3 + 4) = 8.
Travel to station 0. Available gas = (8 – 5 + 4) = 7.
Travel to station 1. Available gas = (7 – 6 + 5) = 6.
Return to station 2. Available gas = (6 – 6) = 0.

Input: gas[] = [1, 2, 3, 4, 5], cost[] = [3, 4, 5, 1, 2]
Output: 3
Explanation: It is possible to travel around the circuit from station at index 3. Amount of gas at station 3 is (0 + 4) = 4.
Travel to station 4. Available gas = 4 – 1 + 5 = 8.
Travel to station 0. Available gas = 8 – 2 + 1 = 7.
Travel to station 1. Available gas= 7 – 3 + 2 = 6.
Travel to station 2. Available gas = 6 – 4 + 3 = 5.
Travel to station 3. The cost is 5. The gas is just enough to travel back to station 3.

Input: gas[] = [3, 9], cost[] = [7, 6]
Output: -1
Explanation: There is no gas station to start with such that you can complete the circuit.
Constraints:
1 ≤ gas.size(), cost.size() ≤ 10^6
1 ≤ gas[i], cost[i] ≤ 10^3

APPROACH:
here in this  problem basically first we will check one condition it the totalcost is greater than the totalgas then its impossible to go with it so return -1 in the 
begining itself. 
next is like while traversing we will keep calculating the gas at every point if the currgas is less then 0 then update the ans=i+1 and update the currgas as 0 and move
to the next gas sation and like that traverse the whole array and at last return ans variable as the ans..

CODE:
class Solution {
  public:
    int startStation(vector<int> &gas, vector<int> &cost) {
        // Your code here
        int n=gas.size();
        
        int totalgas=0, totalcost=0;
        
        for(int i=0; i<n; i++)
        {
            totalgas += gas[i];
            totalcost += cost[i];
        }
        
        if(totalcost>totalgas)
         return -1;
        
        int ans=0, currcost=0; 
        for(int i=0; i<n; i++)
        {
           currcost += gas[i]-cost[i];
           
           if(currcost<0)
           {
               ans = i+1; //as we have to go that index..
               currcost=0;
           }
          
        }
        
        return ans;
    }
};
