Next Greater Element

https://www.geeksforgeeks.org/problems/next-larger-element-1587115620/1

Given an array arr[ ] of integers, the task is to find the next greater element for each element of the array in order of their appearance in the array. Next greater element of an element in the array is the nearest element on the right which is greater than the current element.
If there does not exist next greater of current element, then next greater element for current element is -1. For example, next greater of the last element is always -1.

Input: arr[] = [1, 3, 2, 4]
Output: [3, 4, 4, -1]
Explanation: The next larger element to 1 is 3, 3 is 4, 2 is 4 and for 4, since it doesn't exist, it is -1.

Input: arr[] = [6, 8, 0, 1, 3]
Output: [8, -1, 1, 3, -1]
Explanation: The next larger element to 6 is 8, for 8 there is no larger elements hence it is -1, for 0 it is 1 , for 1 it is 3 and then for 3 there is no larger element on right and hence -1.

Input: arr[] = [10, 20, 30, 50]
Output: [20, 30, 50, -1]
Explanation: For a sorted array, the next element is next greater element also exxept for the last element.

Input: arr[] = [50, 40, 30, 10]
Output: [-1, -1, -1, -1]
Explanation: There is no greater element for any of the elements in the array, so all are -1.
Constraints:
1 ≤ arr.size() ≤ 10^6
0 ≤ arr[i] ≤ 10^9

APPROACH:

Actually that problem i have already done, so the data structure which we are using here is stack to solve this problem basically we start traversing from the last of 
the array and then move from there and keep on checking if element is greater than stack top then pop it the stack element till the top is smaller and if the element is
smaller than the top element then simply push that element..

CODE:

class Solution {
  public:
    // Function to find the next greater element for each element of the array.
    vector<int> nextLargerElement(vector<int>& arr) {
        // code here
        int n=arr.size();
        vector<int>res(n, -1);
        
        stack<int>st;
        st.push(arr[n-1]);
        
        for(int i=n-2; i>=0; i--)
        {
            
            while(!st.empty() && arr[i]>=st.top())
             st.pop();
            
            if(!st.empty())    
              res[i]=st.top();
            
            st.push(arr[i]);
        }
        
        return res;
    }
};
